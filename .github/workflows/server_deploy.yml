name: "[Server] Deploy"

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Deploy Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          # Mostly to avoid GitHub rate limiting
          extra_nix_config: |
            access-tokens = github.com=${{ github.token }}

      - name: Install Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: "[Deploy] Build the new release"
        run: |
          nix build .#server

      - name: "[Deploy] Add SSH key"
        env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.KNOWN_HOSTS }}"  >> ~/.ssh/known_hosts
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
            chmod 600 ~/.ssh/id_ed25519
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null	
            ssh-add ~/.ssh/id_ed25519

      - name: "[Server] Push release to the server"
        run: |
          echo "${{ secrets.VM_ARGS }}" > $(pwd)/server/config/vm.args
          echo "${{ secrets.APP_SETTINGS }}" > $(pwd)/.env

      - name: "[Server] Push release to the server"
        run: |
          nix develop --impure -c just deploy
        env:
            DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock

      - name: "[Cleanup] (...)"
        run: |
          rm -f $(pwd)/.env
          rm -f ~/.ssh/id_ed25519
          rm -f ~/.ssh/know_hosts
