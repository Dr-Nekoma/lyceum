%% == Compiler & other options ==
{erl_opts, [
    warn_unused_import,
    warn_export_vars,
    warnings_as_errors,
    verbose,
    report,
    debug_info,
    {i, "./include"}
]}.

{dist_node, [
    {setcookie, 'lyceum'},
    {sname, 'lyceum_server'}
]}.

%% == Dependencies and plugins ==
{deps, [
    {epgsql, "4.7.1"},
    {pc, "1.15.0"},
    {erlandono, "3.1.3"},
    {migraterl, "0.1.1"},
    {csv, "3.0.3", {pkg, csve}}
]}.

{plugins, [
    { rebar3_nix, ".*", {git, "https://github.com/erlang-nix/rebar3_nix.git", {tag, "v0.1.1"}}}
]}.

%% == Releases ==
{relx, [
    {release, {server, "0.1.0"}, [
        kernel,
        stdlib,
        sasl,
        {migraterl, load},
        {database, permanent},
        server
    ]},

    {mode, dev},
    {extended_start_script, true},

    %% automatically picked up if the files
    %% exist but can be set manually, which
    %% is required if the names aren't exactly
    %% sys.config and vm.args
    {vm_args, "./config/vm.args"},

    %% the .src form of the configuration files do
    %% not require setting RELX_REPLACE_OS_VARS
    %% {sys_config_src, "./config/sys.config.src"},
    %% {vm_args_src, "./config/vm.args.src"}

    {overlay, [
        {mkdir, "log/sasl"},
        {mkdir, "log/errors"},
        {mkdir, "migrations"},
        {copy, "maps/*", "\{\{output_dir\}\}/maps/"},
        {copy, "database/migrations/*", "\{\{output_dir\}\}/migrations/"}
    ]}
]}.

%% == Shell ==
%% apps to auto-boot with `rebar3 shell'; defaults to apps
%% specified in a `relx' tuple, if any.
{shell, [
    {sys_config, "config/local.config"},
    {apps, []}
]}.

%% == Profiles ==
{profiles, [
    %% prod is the default mode when prod
    %% profile is used, so does not have
    %% to be explicitly included like this
    {prod, [
        {relx, [
            {sys_config, "./config/sys.config"},
            %% https://rebar3.org/docs/deployment/releases/#modes
            {mode, prod}
        ]}
    ]},

    {test, [
        {deps, [meck, proper]}
    ]}
]}.

%% == Directories ==
{project_app_dirs, ["apps/*", "include/*", "lib/*", "scripts/*", "." ]}.

%% == Escript ==
